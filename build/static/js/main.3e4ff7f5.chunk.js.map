{"version":3,"sources":["components/ChatMessage.js","components/ChatHistory.js","components/ChatMessageComposer.js","components/Chat.js","index.js"],"names":["ChatMessage","generateClasses","_this","props","message","from","react_default","a","createElement","className","this","Component","ChatHistory","state","messages","map","i","components_ChatMessage","key","ChatMessageComposer","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onKeyPress","event","console","log","inputValue","sendMessage","setState","handleChange","target","value","placeholder","type","onChange","Chat","addMessage","prevState","push","recieveMessage","self","assertThisInitialized","window","location","host","Promise","resolve","reject","$","get","data","status","then","ResponseText","components_ChatHistory","components_ChatMessageComposer","ReactDOM","render","components_Chat","document","getElementById"],"mappings":"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","file":"static/js/main.3e4ff7f5.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass ChatMessage extends Component {\n    //state = {}\n\n    generateClasses = () => {\n        if (this.props.message.from === 'bot') {\n            return 'bot-message';\n        } else {\n            return 'user-message';\n        }\n    }\n    render() {\n        return (\n            <div className={this.generateClasses()}>\n                <div className=\"message\">{this.props.message.message}</div>\n            </div>\n        );\n    }\n}\n\nexport default ChatMessage;","import React, { Component } from 'react';\nimport ChatMessage from \"./ChatMessage\";\n\n\nclass ChatHistory extends Component {\n    state = {}\n    render() {\n        return (\n            <div className=\"chat-output\">\n                {this.props.messages.map(function (message, i) {\n                    return (\n                        <ChatMessage key={i} message={message}></ChatMessage>\n                    );\n                })}\n            </div>\n        )\n    }\n}\n\nexport default ChatHistory;","import React, { Component } from 'react';\n\nclass ChatMessageComposer extends Component {\n    //state = {}\n\n    /*getInitialState = () => {\n        return {\n            inputValue: ''\n        };\n    }*/\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputValue: ''\n        };\n    }\n\n    onKeyPress = (event) => {\n        if (event.key !== 'Enter') { return; }\n        console.log('do we get here', this.props.messages, this.state.inputValue)\n        this.props.sendMessage({\n            message: this.state.inputValue,\n            from: 'you'\n        });\n        this.setState({ inputValue: '' });\n    }\n\n    handleChange = (event) => {\n        this.setState({ inputValue: event.target.value });\n    }\n\n    render() {\n        return (\n            <div className=\"chat-input\">\n                <input placeholder=\"Hello Prashant\" className=\"user-input\" type=\"text\" value={this.state.inputValue} onChange={this.handleChange} onKeyPress={this.onKeyPress} />\n            </div>\n        );\n    }\n}\n\nexport default ChatMessageComposer;","import React, { Component } from \"react\";\n//import rp from 'request-promise';\nimport $ from \"jquery\";\n\nimport ChatHistory from \"./ChatHistory\";\nimport ChatMessageComposer from \"./ChatMessageComposer\";\n\nclass Chat extends Component {\n\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: 'Not paired',\n      messages: []\n    };\n  }\n  /*\n    getInitialState = () => {\n      return {\n        status: 'Not paired',\n        messages: []\n      };\n    }*/\n\n\n  addMessage = (message) => {\n    console.log(\"add msg\")\n    this.setState(function (prevState) {\n      prevState.messages.push(message);\n      return { messages: prevState.messages };\n    });\n  }\n\n  recieveMessage = (message) => {\n    console.log(\"send recieveMessage res\",message)\n    this.setState(function (prevState) {\n      prevState.messages.push({\n        message: message.message,\n        from: 'bot'\n      });\n      return { messages: prevState.messages };\n    });\n  }\n\n  sendMessage = (message) => {\n    console.log('Send Message --> ', message)\n    // socket.emit('create:message', message.message);\n    this.addMessage(message)\n    let res;\n    let self =this;\n\tconsole.log(\"locattion  == \", window.location.host)\n    if(message.message !== \"hi\"){\n     // this.recieveMessage({message:\"hello\"})\n     var promise1 = new Promise(function(resolve, reject) {\n      $.get(window.location.host+\"/response/\"+message.message+\"/14/1\", function(data, status){\n        resolve(data);\n      });\n    });\n    promise1.then(function(value) {\n      console.log(value[0])\n    //console.log(value[0][0].ResponseText)\n     res=value;\n     self.recieveMessage({message:value[0][0].ResponseText})\n    });\n    }else{\n      this.recieveMessage({message:\"sorry...!!!\"})\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <ChatHistory messages={this.state.messages}></ChatHistory>\n        <ChatMessageComposer sendMessage={this.sendMessage}></ChatMessageComposer>\n      </div>\n    );\n  }\n\n\n\n}\n\nexport default Chat;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n//import App from \"./App\";\nimport Chat from \"./components/Chat\";\n\nReactDOM.render(<Chat />, document.getElementById(\"root\"));\n"],"sourceRoot":""}